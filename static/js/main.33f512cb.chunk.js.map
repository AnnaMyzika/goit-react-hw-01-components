{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendsList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendList/FriendList.js","components/Profile/Profile.js","components/Statistics/Statistics.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FriendList","friends","className","s","map","avatar","name","isOnline","id","FriendsListItem","Online","Offline","Avatar","src","alt","width","Name","defaultProps","Profile","tag","location","followers","views","likes","profile","description","stats","statsItem","label","quantity","Statistics","title","statistics","statList","min","max","percentage","item","style","backgroundColor","Math","random","TransactionHistory","transactions","type","amount","currency","align","App","user","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,MAAQ,uBAAuB,UAAY,2BAA2B,KAAO,sBAAsB,SAAW,0BAA0B,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,yB,6PCAjVD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,gBAAkB,qCAAqC,OAAS,4BAA4B,QAAU,6BAA6B,OAAS,4BAA4B,KAAO,4B,gBCA9OD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,WAAa,+BAA+B,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,4B,62FCA5ND,EAAOC,QAAU,CAAC,mBAAqB,iD,2JCGjCC,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,oBAAIC,UAAWC,IAAEH,WAAjB,SACGC,EAAQG,KAAI,YAAqC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GACtC,OACE,qBAAIN,UAAWC,IAAEM,gBAAjB,UACE,sBAAMP,UAAWK,EAAWJ,IAAEO,OAASP,IAAEQ,UACzC,qBAAKT,UAAWC,IAAES,OAAQC,IAAKR,EAAQS,IAAKR,EAAMS,MAAM,OACxD,mBAAGb,UAAWC,IAAEa,KAAhB,SAAuBV,MAHcE,SAWjDR,EAAWiB,aAAe,CACxBZ,OAAQ,iEAaKL,Q,gBC9BTkB,EAAU,SAAC,GAA8D,IAA5DZ,EAA2D,EAA3DA,KAAMa,EAAqD,EAArDA,IAAKC,EAAgD,EAAhDA,SAAUf,EAAsC,EAAtCA,OAAQgB,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAChE,OACE,sBAAKrB,UAAWC,IAAEqB,QAAlB,UACE,sBAAKtB,UAAWC,IAAEsB,YAAlB,UACE,qBAAKZ,IAAKR,EAAQS,IAAI,gHAAsBZ,UAAWC,IAAEE,SACzD,mBAAGH,UAAWC,IAAEG,KAAhB,SAAuBA,IACvB,mBAAGJ,UAAWC,IAAEgB,IAAhB,SAAsBA,IACtB,mBAAGjB,UAAWC,IAAEiB,SAAhB,SAA2BA,OAG7B,qBAAIlB,UAAWC,IAAEuB,MAAjB,UACE,qBAAIxB,UAAWC,IAAEwB,UAAjB,UACE,sBAAMzB,UAAWC,IAAEyB,MAAnB,uBACA,sBAAM1B,UAAWC,IAAE0B,SAAnB,SAA8BR,OAEhC,qBAAInB,UAAWC,IAAEwB,UAAjB,UACE,sBAAMzB,UAAWC,IAAEyB,MAAnB,mBACA,sBAAM1B,UAAWC,IAAE0B,SAAnB,SAA8BP,OAEhC,qBAAIpB,UAAWC,IAAEwB,UAAjB,UACE,sBAAMzB,UAAWC,IAAEyB,MAAnB,mBACA,sBAAM1B,UAAWC,IAAE0B,SAAnB,SAA8BN,cAOxCL,EAAQD,aAAe,CACrBZ,OAAQ,iEAYKa,Q,gBCDAY,EA9BI,SAAC,GAAsB,IAApBJ,EAAmB,EAAnBA,MAAOK,EAAY,EAAZA,MAC3B,OACE,0BAAS7B,UAAWC,IAAE6B,WAAtB,UACGD,GAAS,oBAAI7B,UAAWC,IAAE4B,MAAjB,SAAyBA,IACnC,oBAAI7B,UAAWC,IAAE8B,SAAjB,SACGP,EAAMtB,KAAI,gBAfQ8B,EAAKC,EAeV3B,EAAH,EAAGA,GAAIoB,EAAP,EAAOA,MAAOQ,EAAd,EAAcA,WAAd,OACT,qBACElC,UAAWC,IAAEkC,KAEbC,MAAO,CAAEC,iBAnBML,EAmB6B,EAnBxBC,EAmB2B,IAlB1C,sBACTK,KAAKC,UAAYN,EAAMD,GAAOA,EADrB,oBAETM,KAAKC,UAAYN,EAAMD,GAAOA,EAFrB,oBAGTM,KAAKC,UAAYN,EAAMD,GAAOA,EAHrB,WAeP,UAKE,sBAAMhC,UAAWC,IAAEyB,MAAnB,SAA2BA,IAC3B,uBAAM1B,UAAWC,IAAEiC,WAAnB,UAAgCA,EAAhC,SAJK5B,Y,iBCYFkC,EA9BY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC5B,OACE,wBAAOzC,UAAWC,IAAEuC,mBAApB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGC,EAAavC,KAAI,gBAAGI,EAAH,EAAGA,GAAIoC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQC,EAArB,EAAqBA,SAArB,OAChB,+BACE,6BAAKF,IACL,oBAAIG,MAAM,SAAV,SAAoBF,IACpB,oBAAIE,MAAM,SAAV,SAAoBD,MAHbtC,YCiBJwC,MApBf,WACE,OACE,sBAAK9C,UAAU,MAAf,UACE,cAAC,EAAD,CACEI,KAAM2C,EAAK3C,KACXa,IAAK8B,EAAK9B,IACVC,SAAU6B,EAAK7B,SACff,OAAQ4C,EAAK5C,OACbgB,UAAW4B,EAAKvB,MAAML,UACtBC,MAAO2B,EAAKvB,MAAMJ,MAClBC,MAAO0B,EAAKvB,MAAMH,QAEpB,cAAC,EAAD,CAAYQ,MAAM,eAAeL,MAAOwB,IACxC,cAAC,EAAD,CAAYxB,MAAOwB,IACnB,cAAC,EAAD,CAAYjD,QAASA,IACrB,cAAC,EAAD,CAAoB0C,aAAcA,QCjBzBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.33f512cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3lYgq\",\"description\":\"Profile_description__3OsEO\",\"avatar\":\"Profile_avatar__1kv9i\",\"stats\":\"Profile_stats__1vzQA\",\"statsItem\":\"Profile_statsItem__1rkhR\",\"name\":\"Profile_name__3bOse\",\"quantity\":\"Profile_quantity__2sgW3\",\"tag\":\"Profile_tag__Hai8O\",\"location\":\"Profile_location__AnQAW\",\"label\":\"Profile_label__DhVim\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendList\":\"FriendsList_FriendList__30tZ_\",\"FriendsListItem\":\"FriendsList_FriendsListItem__1hjmZ\",\"Online\":\"FriendsList_Online__3JuLc\",\"Offline\":\"FriendsList_Offline__3Gaum\",\"Avatar\":\"FriendsList_Avatar__EPFW6\",\"Name\":\"FriendsList_Name__3Kel5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1av_x\",\"title\":\"Statistics_title__FqlY7\",\"percentage\":\"Statistics_percentage__24z5p\",\"statList\":\"Statistics_statList__2eC5B\",\"item\":\"Statistics_item__2JJ-z\",\"label\":\"Statistics_label__1jFMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionHistory\":\"TransactionHistory_TransactionHistory__2jDgj\"};","import React from \"react\";\r\nimport s from \"./FriendsList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={s.FriendList}>\r\n      {friends.map(({ avatar, name, isOnline, id }) => {\r\n        return (\r\n          <li className={s.FriendsListItem} key={id}>\r\n            <span className={isOnline ? s.Online : s.Offline}></span>\r\n            <img className={s.Avatar} src={avatar} alt={name} width=\"48\" />\r\n            <p className={s.Name}>{name}</p>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.defaultProps = {\r\n  avatar: \"нет аватара\",\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Profile.module.css\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, followers, views, likes }) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li className={s.statsItem}>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{followers}</span>\r\n        </li>\r\n        <li className={s.statsItem}>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{views}</span>\r\n        </li>\r\n        <li className={s.statsItem}>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.defaultProps = {\r\n  avatar: \"нет аватара\",\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  followers: PropTypes.number.isRequired,\r\n  views: PropTypes.number.isRequired,\r\n  likes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport s from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst generateItemColor = (min, max) => {\r\n  const itemColor = `rgb(\r\n      ${Math.random() * (max - min) + min},\r\n      ${Math.random() * (max - min) + min},\r\n      ${Math.random() * (max - min) + min}\r\n  )`;\r\n\r\n  return itemColor;\r\n};\r\n\r\nconst Statistics = ({ stats, title }) => {\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      <ul className={s.statList}>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <li\r\n            className={s.item}\r\n            key={id}\r\n            style={{ backgroundColor: generateItemColor(0, 255) }}\r\n          >\r\n            <span className={s.label}>{label}</span>\r\n            <span className={s.percentage}>{percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport s from \"./TransactionHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHistory = ({ transactions }) => {\r\n  return (\r\n    <table className={s.TransactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {transactions.map(({ id, type, amount, currency }) => (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td align=\"center\">{amount}</td>\r\n            <td align=\"center\">{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\n\n// data\nimport friends from \"./data/friends.json\";\nimport user from \"./data/user.json\";\nimport data from \"./data/statistical-data.json\";\nimport transactions from \"./data/transactions.json\";\n\n// components\nimport FriendList from \"./components/FriendList/FriendList\";\nimport Profile from \"./components/Profile/Profile\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <Statistics title=\"Upload stats\" stats={data} />\n      <Statistics stats={data} />\n      <FriendList friends={friends} />\n      <TransactionHistory transactions={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}